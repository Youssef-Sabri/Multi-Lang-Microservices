name: Build and Push Docker Images to Amazon ECR

on:
  push:
    branches:
      - main  # Trigger the workflow when pushing to the main branch
  pull_request:
    branches:
      - main  # Also trigger on pull requests to the main branch

jobs:
  build_and_push:
    runs-on: ubuntu-latest  # Use the latest Ubuntu runner for this job

    steps:
    # Step 1: Checkout the repository
    - name: Checkout Code from GitHub
      uses: actions/checkout@v2  # Checkout the code so that Docker can access the Dockerfile

    # Step 2: Configure AWS Credentials (Set Region and Keys)
    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: us-east-1

    # Step 3: Log in to Amazon ECR
    - name: Login to Amazon ECR
      uses: aws-actions/amazon-ecr-login@v1

    # Step 4: Set up Docker Buildx (optional for advanced Docker builds)
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2  # Set up Buildx to build multi-platform images

    # Step 5: Build the Docker image
    - name: Build Docker Image
      run: |
        docker build -t ${{ secrets.ECR_REPOSITORY }} .  # Build the Docker image using the repository secret
        docker tag ${{ secrets.ECR_REPOSITORY }}:latest public.ecr.aws/r0i6v8x7/${{ secrets.ECR_REPOSITORY }}:latest  # Tag the image for ECR

    # Step 6: Push Docker Image to Amazon ECR
    - name: Push Docker Image to ECR
      run: |
        docker push public.ecr.aws/r0i6v8x7/${{ secrets.ECR_REPOSITORY }}:latest  # Push the Docker image to the correct ECR repository
