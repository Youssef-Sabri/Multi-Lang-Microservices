version: '3.9'

services:
  # User Management Service
  user_mangment:
    container_name: user_mangment
    build:
      context: ./user-management
      dockerfile: Dockerfile
    image: y0ussefwael/user_mangment:latest  # Updated to include your Docker Hub username
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgres://postgres:salah@db:5432/mydb
      - JWT_SECRET=your_jwt_secret_here
    depends_on:
      - db
    networks:
      - app-network

  # PostgreSQL Database Service
  db:
    image: postgres:13
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: salah
      POSTGRES_DB: mydb
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app-network

  # Kafka Service
  kafka:
    image: bitnami/kafka:latest
    environment:
      - KAFKA_BROKER_ID=1
      - KAFKA_ZOOKEEPER_CONNECT=zookeeper:2181
      - KAFKA_LISTENERS=PLAINTEXT://0.0.0.0:9092
      - KAFKA_ADVERTISED_LISTENERS=PLAINTEXT://kafka:9092
    ports:
      - "9092:9092"
    networks:
      - app-network
    depends_on:
      - zookeeper
    restart: always

  # Zookeeper Service for Kafka
  zookeeper:
    image: bitnami/zookeeper:latest
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
    ports:
      - "2181:2181"
    networks:
      - app-network
    restart: always

  # Application (FastAPI Producer) en2ar_service
  en2ar_service:
    container_name: en2ar_service
    build:
      context: ./en2ar_service
      dockerfile: Dockerfile
    image: y0ussefwael/en2ar_service:latest  # Updated to include your Docker Hub username
    ports:
      - "8000:8000"
    networks:
      - app-network
    depends_on:
      - kafka
    command: ["sh", "-c", "uvicorn en2ar_service.main:app --host 0.0.0.0 --port 8000 & python en2ar_service/consumer.py"]
    restart: always

  # Application (FastAPI Producer) ar2en_service
  ar2en_service:
    container_name: ar2en_service
    build:
      context: ./ar2en_service
      dockerfile: Dockerfile
    image: y0ussefwael/ar2en_service:latest  # Updated to include your Docker Hub username
    ports:
      - "8001:8001"
    networks:
      - app-network
    depends_on:
      - kafka
    command: ["sh", "-c", "uvicorn ar2en_service.main:app --host 0.0.0.0 --port 8001 & python ar2en_service/consumer.py"]
    restart: always

  # Text Summarization Service
  text-summarization-service:
    container_name: text-summarization-service
    build:
      context: ./text-summarization-service
      dockerfile: Dockerfile
    image: y0ussefwael/text-summarization-service:latest  # Updated to include your Docker Hub username
    ports:
      - "8002:8002"
    networks:
      - app-network
    depends_on:
      - kafka
    command: ["sh", "-c", "flask run --host=0.0.0.0 --port=8002 & python consumer.py"]
    restart: always

  # API Gateway (NGINX)
  nginx:
    container_name: api-gateway
    build:
      context: ./api-gateway
      dockerfile: Dockerfile
    image: y0ussefwael/api-gateway:latest  # Updated to include your Docker Hub username
    volumes:
      - "./api-gateway/nginx.conf:/etc/nginx/nginx.conf:ro"
    ports:
      - "80:80"
    depends_on:
      - user_mangment
      - en2ar_service
      - ar2en_service
      - text-summarization-service
    networks:
      - app-network
    restart: always

volumes:
  postgres_data:

networks:
  app-network:
    driver: bridge
